<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="91a5e981-830a-40a5-8352-9d5ee08f4b4e" name="Changes" comment="Implementacja dziedziczenia i polimorfizmu w modelu zoo&#10;&#10;- Dodano klasę bazową 'Animal' z polami 'size' (enum AnimalSize) i 'weight'.&#10;- Utworzono klasy pochodne 'Dog' i 'Fish', rozszerzające funkcjonalność 'Animal'.&#10;- Zaimplementowano w klasach 'Dog' i 'Fish' specyficzne metody i pola, wykorzystując koncepty dziedziczenia.&#10;- Wprowadzono enum 'AnimalSize' z wartościami SMALL, MEDIUM, BIG, ułatwiający określenie rozmiaru zwierzęcia.&#10;- Stworzono klasę 'Zoo', która zarządza kolekcją obiektów 'Animal', demonstrując wykorzystanie polimorfizmu.&#10;- Polimorfizm zastosowano poprzez przechowywanie różnych typów zwierząt (Dog, Fish) w tablicy typu 'Animal'.&#10;- Przetestowano interakcje pomiędzy klasami, zapewniając poprawne działanie dziedziczenia i polimorfizmu.">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Enum" />
        <option value="Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="PUSH_AUTO_UPDATE" value="true" />
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 0
}</component>
  <component name="ProjectId" id="2aXuZ2vEiS1jB0FePyMRR1vE1Hw" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;git-widget-placeholder&quot;: &quot;main&quot;,
    &quot;last_opened_file_path&quot;: &quot;/home/marcin/Pulpit/Java/Object/Animal&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.pluginManager&quot;
  }
}</component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="91a5e981-830a-40a5-8352-9d5ee08f4b4e" name="Changes" comment="" />
      <created>1704477297795</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1704477297795</updated>
    </task>
    <task id="LOCAL-00001" summary="Implementacja dziedziczenia i polimorfizmu w modelu zoo&#10;&#10;- Dodano klasę bazową 'Animal' z polami 'size' (enum AnimalSize) i 'weight'.&#10;- Utworzono klasy pochodne 'Dog' i 'Fish', rozszerzające funkcjonalność 'Animal'.&#10;- Zaimplementowano w klasach 'Dog' i 'Fish' specyficzne metody i pola, wykorzystując koncepty dziedziczenia.&#10;- Wprowadzono enum 'AnimalSize' z wartościami SMALL, MEDIUM, BIG, ułatwiający określenie rozmiaru zwierzęcia.&#10;- Stworzono klasę 'Zoo', która zarządza kolekcją obiektów 'Animal', demonstrując wykorzystanie polimorfizmu.&#10;- Polimorfizm zastosowano poprzez przechowywanie różnych typów zwierząt (Dog, Fish) w tablicy typu 'Animal'.&#10;- Przetestowano interakcje pomiędzy klasami, zapewniając poprawne działanie dziedziczenia i polimorfizmu.">
      <option name="closed" value="true" />
      <created>1705011575778</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1705011575778</updated>
    </task>
    <option name="localTasksCounter" value="2" />
    <servers />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="Implementacja dziedziczenia i polimorfizmu w modelu zoo&#10;&#10;- Dodano klasę bazową 'Animal' z polami 'size' (enum AnimalSize) i 'weight'.&#10;- Utworzono klasy pochodne 'Dog' i 'Fish', rozszerzające funkcjonalność 'Animal'.&#10;- Zaimplementowano w klasach 'Dog' i 'Fish' specyficzne metody i pola, wykorzystując koncepty dziedziczenia.&#10;- Wprowadzono enum 'AnimalSize' z wartościami SMALL, MEDIUM, BIG, ułatwiający określenie rozmiaru zwierzęcia.&#10;- Stworzono klasę 'Zoo', która zarządza kolekcją obiektów 'Animal', demonstrując wykorzystanie polimorfizmu.&#10;- Polimorfizm zastosowano poprzez przechowywanie różnych typów zwierząt (Dog, Fish) w tablicy typu 'Animal'.&#10;- Przetestowano interakcje pomiędzy klasami, zapewniając poprawne działanie dziedziczenia i polimorfizmu." />
    <option name="LAST_COMMIT_MESSAGE" value="Implementacja dziedziczenia i polimorfizmu w modelu zoo&#10;&#10;- Dodano klasę bazową 'Animal' z polami 'size' (enum AnimalSize) i 'weight'.&#10;- Utworzono klasy pochodne 'Dog' i 'Fish', rozszerzające funkcjonalność 'Animal'.&#10;- Zaimplementowano w klasach 'Dog' i 'Fish' specyficzne metody i pola, wykorzystując koncepty dziedziczenia.&#10;- Wprowadzono enum 'AnimalSize' z wartościami SMALL, MEDIUM, BIG, ułatwiający określenie rozmiaru zwierzęcia.&#10;- Stworzono klasę 'Zoo', która zarządza kolekcją obiektów 'Animal', demonstrując wykorzystanie polimorfizmu.&#10;- Polimorfizm zastosowano poprzez przechowywanie różnych typów zwierząt (Dog, Fish) w tablicy typu 'Animal'.&#10;- Przetestowano interakcje pomiędzy klasami, zapewniając poprawne działanie dziedziczenia i polimorfizmu." />
  </component>
</project>